{"remainingRequest":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/atk420t/Desktop/fizzee_blog/node_modules/vuepress-theme-ktquez/Layout.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vuepress-theme-ktquez/Layout.vue","mtime":1555835683885},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/cache-loader/dist/cjs.js","mtime":1555767086794},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/index.js","mtime":1555458748450}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// layouts\nimport LayoutBase from '@theme/layouts/Base'\nimport LayoutPost from '@theme/layouts/Post'\nimport LayoutPage from '@theme/layouts/Page'\n\n// views\nimport Home from '@theme/views/Home'\nimport Page from '@theme/views/Page'\nimport Post from '@theme/views/Post'\nimport Posts from '@theme/views/Posts'\nimport Category from '@theme/views/Category'\nimport Author from '@theme/views/Author'\nimport Authors from '@theme/views/Authors'\nimport Categories from '@theme/views/Categories'\n\n// plugins\nimport EventBus from '@theme/plugins/EventBus'\n\n// Components\nimport SWUpdatePopup from '@theme/components/SW/UpdatePopup'\n\n// Mixins\nimport NProgressMixin from '@theme/mixins/NProgress'\nimport AnnouncerMixin from '@theme/mixins/Announcer'\n\nimport FontFaceObserver from 'fontfaceobserver'\n\nexport default {\n  name: 'MainLayout',\n\n  mixins: [NProgressMixin, AnnouncerMixin],\n\n  components: { \n    Home,\n    Page,\n    Post,\n    Posts,\n    Author,\n    Authors,\n    Categories,\n    Category,\n    LayoutBase,\n    LayoutPost,\n    LayoutPage,\n    SWUpdatePopup,\n    Overlay: () => import(/* webpackChunkName = \"Overlay\" */ '@theme/components/Overlay'),\n    NavMobile: () => import(/* webpackChunkName = \"NavMobile\" */ '@theme/components/NavMobile'),\n    GlobalEvents: () => import(/* webpackChunkName = \"GlobalEvents\" */ 'vue-global-events'),\n    SkipTo: () => import(/* webpackChunkName = \"SkipTo\" */ '@theme/components/SkipTo'),\n    BackToTop: () => import(/* webpackChunkName = \"BackToTop\" */ '@theme/components/BackToTop')\n  },\n\n  data () {\n    return {\n      transitionName: 'slideleft',\n      nmOpened: false,\n      negative: false,\n      swUpdateEvent: null\n    }\n  },\n\n  watch: {\n    '$route' (to, from) {\n      const toDepth = to.path.split('/').length\n      const fromDepth = from.path.split('/').length\n      this.transitionName = toDepth < fromDepth ? 'slideright' : 'slideleft'\n    }\n  },\n\n  computed: {\n    layout () {\n      return 'layout-' + (this.$page.frontmatter.layout || 'base')\n    },\n    view () {\n      return this.$page.frontmatter.view\n    }\n  },\n\n  created () {\n    EventBus.$on('show_nm', data => {\n      this.nmOpened = data\n    })\n\n    if (this.$themeConfig.blackWhite) {\n      EventBus.$on('toggle_black_white', data => {\n        this.negative = data\n      })\n    }      \n  },\n\n  beforeMount () {\n    // SW update tip for PWA\n    this.$on('sw-updated', this.onSWUpdated)\n    this.handleLoadWebFont()\n  },\n\n  methods: {\n    handleLoadWebFont () {\n      const poppinsRegular = new FontFaceObserver('Poppins', { weight: 400 })\n      const poppinsBold = new FontFaceObserver('Poppins', { weight: 700 })\n\n      if (sessionStorage.fontsLoaded) {\n        return document.documentElement.classList.add('fonts-loaded')\n      }\n\n      Promise.all([poppinsRegular.load(), poppinsBold.load()]).then(() => {\n        document.documentElement.classList.add('fonts-loaded')\n        sessionStorage.fontsLoaded = true\n      }).catch(() => {\n        sessionStorage.fontsLoaded = false\n      })\n    },\n\n    cancel () {\n      EventBus.$emit('show_search', false)\n      EventBus.$emit('close_overlay', false)\n    },\n\n    closeMenu () {\n      this.nmOpened = false\n      EventBus.$emit('close_nm', false)\n    },\n\n    onSWUpdated (e) {\n      this.swUpdateEvent = e\n    }\n  }\n}\n",null]}