{"remainingRequest":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-disqus/dist/vue-disqus.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-disqus/dist/vue-disqus.vue","mtime":1555835213837},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/cache-loader/dist/cjs.js","mtime":1555767086794},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/index.js","mtime":1555458748450}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: 'vue-disqus',\n  props: {\n    shortname: {\n      type: String,\n      required: true\n    },\n    identifier: {\n      type: String,\n      required: false\n    },\n    url: {\n      type: String,\n      required: false\n    },\n    title: {\n     type: String,\n     required: false\n    },\n    remote_auth_s3: {\n     type: String,\n     required: false\n    },\n    api_key: {\n     type: String,\n     required: false\n    },\n    sso_config: {\n      type: Object,\n      required: false\n    },\n    language: {\n      type: String,\n      required: false\n    }\n  },\n  mounted () {\n    if (window.DISQUS) {\n      this.reset(window.DISQUS)\n      return\n    }\n    this.init()\n  },\n  methods: {\n    reset (dsq) {\n      const self = this\n      dsq.reset({\n        reload: true,\n        config: function () {\n          self.setBaseConfig(this)\n        }\n      })\n    },\n    init () {\n      const self = this\n      window.disqus_config = function() {\n        self.setBaseConfig(this)\n      }\n      setTimeout(() => {\n        let d = document\n          , s = d.createElement('script')\n        s.setAttribute('id', 'embed-disqus')\n        s.setAttribute('data-timestamp', +new Date())\n        s.type = 'text/javascript'\n        s.async = true\n        s.src = `//${this.shortname}.disqus.com/embed.js`\n        ;(d.head || d.body).appendChild(s)\n      }, 0)\n    },\n    setBaseConfig (disqusConfig){\n      disqusConfig.page.identifier = (this.identifier || this.$route.path || window.location.pathname)\n      disqusConfig.page.url = (this.url || this.$el.baseURI)\n      if (this.title){\n        disqusConfig.page.title = this.title;\n      }\n      if (this.remote_auth_s3){\n        disqusConfig.page.remote_auth_s3 = this.remote_auth_s3;\n      }\n      if (this.api_key){\n        disqusConfig.page.api_key = this.api_key;\n      }\n      if (this.sso_config){\n        disqusConfig.sso = this.sso_config;\n      }\n      if (this.language){\n        disqusConfig.language = this.language;\n      }\n\n      disqusConfig.callbacks.onReady = [() => {\n        this.$emit('ready')\n      }]\n      \n      disqusConfig.callbacks.onNewComment = [(comment) => {\n        this.$emit('new-comment', comment)\n      }]\n    }\n  }\n}\n",{"version":3,"sources":["vue-disqus.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"vue-disqus.vue","sourceRoot":"node_modules/vue-disqus/dist","sourcesContent":["<template>\r\n  <div id=\"disqus_thread\"></div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'vue-disqus',\r\n    props: {\r\n      shortname: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      identifier: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      url: {\r\n        type: String,\r\n        required: false\r\n      },\r\n      title: {\r\n       type: String,\r\n       required: false\r\n      },\r\n      remote_auth_s3: {\r\n       type: String,\r\n       required: false\r\n      },\r\n      api_key: {\r\n       type: String,\r\n       required: false\r\n      },\r\n      sso_config: {\r\n        type: Object,\r\n        required: false\r\n      },\r\n      language: {\r\n        type: String,\r\n        required: false\r\n      }\r\n    },\r\n    mounted () {\r\n      if (window.DISQUS) {\r\n        this.reset(window.DISQUS)\r\n        return\r\n      }\r\n      this.init()\r\n    },\r\n    methods: {\r\n      reset (dsq) {\r\n        const self = this\r\n        dsq.reset({\r\n          reload: true,\r\n          config: function () {\r\n            self.setBaseConfig(this)\r\n          }\r\n        })\r\n      },\r\n      init () {\r\n        const self = this\r\n        window.disqus_config = function() {\r\n          self.setBaseConfig(this)\r\n        }\r\n        setTimeout(() => {\r\n          let d = document\r\n            , s = d.createElement('script')\r\n          s.setAttribute('id', 'embed-disqus')\r\n          s.setAttribute('data-timestamp', +new Date())\r\n          s.type = 'text/javascript'\r\n          s.async = true\r\n          s.src = `//${this.shortname}.disqus.com/embed.js`\r\n          ;(d.head || d.body).appendChild(s)\r\n        }, 0)\r\n      },\r\n      setBaseConfig (disqusConfig){\r\n        disqusConfig.page.identifier = (this.identifier || this.$route.path || window.location.pathname)\r\n        disqusConfig.page.url = (this.url || this.$el.baseURI)\r\n        if (this.title){\r\n          disqusConfig.page.title = this.title;\r\n        }\r\n        if (this.remote_auth_s3){\r\n          disqusConfig.page.remote_auth_s3 = this.remote_auth_s3;\r\n        }\r\n        if (this.api_key){\r\n          disqusConfig.page.api_key = this.api_key;\r\n        }\r\n        if (this.sso_config){\r\n          disqusConfig.sso = this.sso_config;\r\n        }\r\n        if (this.language){\r\n          disqusConfig.language = this.language;\r\n        }\r\n\r\n        disqusConfig.callbacks.onReady = [() => {\r\n          this.$emit('ready')\r\n        }]\r\n        \r\n        disqusConfig.callbacks.onNewComment = [(comment) => {\r\n          this.$emit('new-comment', comment)\r\n        }]\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}