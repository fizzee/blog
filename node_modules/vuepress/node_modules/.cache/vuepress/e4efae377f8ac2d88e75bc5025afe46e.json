{"remainingRequest":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/atk420t/Desktop/fizzee_blog/node_modules/vuepress-theme-ktquez/components/Header/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vuepress-theme-ktquez/components/Header/Search.vue","mtime":1555835683885},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/cache-loader/dist/cjs.js","mtime":1555767086794},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/index.js","mtime":1555458748450}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport EventBus from '@theme/plugins/EventBus'\n\nexport default {\n  name: 'Search',\n\n  data () {\n    return {\n      show: false,\n      query: '',\n      focused: false,\n      focusIndex: 0\n    }\n  },\n\n  computed: {\n    getIcon () {\n      return this.show ? 'cancel' : 'search'\n    },\n\n    showSuggestions () {\n      return (\n        this.focused &&\n        this.suggestions &&\n        this.suggestions.length\n      )\n    },\n\n    suggestions () {\n      const query = this.query.trim().toLowerCase()\n      if (!query) {\n        return []\n      }\n\n      const { pages, themeConfig } = this.$site\n      const max = themeConfig.searchMaxSuggestions || 5\n      const localePath = this.$localePath\n      const matches = item => (\n        item.title &&\n        item.title.toLowerCase().indexOf(query) > -1\n      )\n      const res = []\n      for (let i = 0; i < pages.length; i++) {\n        if (res.length >= max) break\n        const p = pages[i]\n        // filter out results that do not match current locale\n        if (this.getPageLocalePath(p) !== localePath) {\n          continue\n        }\n        if (matches(p)) {\n          res.push(p)\n        } else if (p.headers) {\n          for (let j = 0; j < p.headers.length; j++) {\n            if (res.length >= max) break\n            const h = p.headers[j]\n            if (matches(h)) {\n              res.push(Object.assign({}, p, {\n                path: p.path + '#' + h.slug,\n                header: h\n              }))\n            }\n          }\n        }\n      }\n      return res\n    }\n  },\n\n  created () {\n    EventBus.$on('show_search', data => {\n      this.show = data\n    })\n    EventBus.$on('close_overlay', data => {\n      this.show = data\n    })\n  },\n\n  methods: {\n    toggle () {\n      this.show = !this.show        \n      if (this.show) this.setFocus()\n      EventBus.$emit('show_search', this.show)\n      EventBus.$emit('show_overlay', this.show)\n    },\n\n    setFocus () {\n      setTimeout(() => {\n        this.reset()\n        this.$refs.inputSearch.focus()\n      }, 400)\n    },\n\n    reset () {\n      this.query = ''\n      this.$refs.inputSearch.value = ''\n    },\n\n    getPageLocalePath (page) {\n      for (const localePath in this.$site.locales || {}) {\n        if (localePath !== '/' && page.path.indexOf(localePath) === 0) {\n          return localePath\n        }\n      }\n      return '/'\n    }\n  }\n}\n",null]}