{"remainingRequest":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/atk420t/Desktop/fizzee_blog/node_modules/vuepress-theme-ktquez/components/lazy/load.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vuepress-theme-ktquez/components/lazy/load.vue","mtime":1555835683885},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/css-loader/locals.js","mtime":1555741042200},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1555458748450},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/postcss-loader/lib/index.js","mtime":1551343704665},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/stylus-loader/index.js","mtime":1555741411087},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/cache-loader/dist/cjs.js","mtime":1555767086794},{"path":"/Users/atk420t/Desktop/fizzee_blog/node_modules/vue-loader/lib/index.js","mtime":1555458748450}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import '~@theme/styles/config.styl'\r\n\r\n.observer\r\n  position: relative\r\n  height: 100%\r\n  min-height: 200px\r\n\r\n  &--displayed\r\n    min-height: auto\r\n\r\n  &__spinner\r\n    position: absolute\r\n    top: 50%\r\n    left: 50%\r\n    transform: translate(-50%, -50%)\r\n    z-index: 1\r\n    transition visibility .5s 1s, opacity .5s 1s\r\n\r\n    &--hide\r\n      opacity: 0\r\n      visibility: hidden\r\n\r\n",{"version":3,"sources":["load.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"load.vue","sourceRoot":"node_modules/vuepress-theme-ktquez/components/lazy","sourcesContent":["<template>\r\n  <div class=\"observer\" :class=\"{ 'observer--displayed': displayed }\">\r\n    <spinner class=\"observer__spinner\" :class=\"{ 'observer__spinner--hide': displayed }\" v-if=\"spinner\" />\r\n    <component v-if=\"tag && displayed\" :is=\"current\" :tag=\"tag\" :data=\"data\" />\r\n    <slot v-if=\"!tag && displayed\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Spinner from '@theme/components/Spinner'\r\n\r\n  export default {\r\n    name: 'LazyLoadIntersectionObserver',\r\n\r\n    components: {\r\n      Spinner\r\n    },\r\n\r\n    props: {\r\n      tag: String,\r\n      data: Object,\r\n      spinner: {\r\n        type: Boolean,\r\n        default: true\r\n      }\r\n    },\r\n\r\n    data () {\r\n      return {\r\n        displayed: false,\r\n        observer: null\r\n      }\r\n    },\r\n\r\n    computed: {\r\n      current () {\r\n        return () => import(`@theme/components/lazy/load-${this.tag}.vue`)\r\n      }\r\n    },\r\n\r\n    mounted () {\r\n      require('intersection-observer')\r\n      this.observer = new IntersectionObserver(([entry]) => {\r\n        if (this.displayed) return\r\n        if (entry && entry.isIntersecting) {\r\n          this.displayed = true\r\n          this.disconnect()\r\n        }\r\n      }, (this.$themeConfig.lazyLoad || {}))\r\n\r\n      this.observer.observe(this.$el)\r\n    },\r\n\r\n    beforeDestroy () {\r\n      this.disconnect()\r\n    },\r\n\r\n    methods: {\r\n      disconnect () {\r\n        this.observer.disconnect()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n@import '~@theme/styles/config.styl'\r\n\r\n.observer\r\n  position: relative\r\n  height: 100%\r\n  min-height: 200px\r\n\r\n  &--displayed\r\n    min-height: auto\r\n\r\n  &__spinner\r\n    position: absolute\r\n    top: 50%\r\n    left: 50%\r\n    transform: translate(-50%, -50%)\r\n    z-index: 1\r\n    transition visibility .5s 1s, opacity .5s 1s\r\n\r\n    &--hide\r\n      opacity: 0\r\n      visibility: hidden\r\n\r\n</style>"]}]}